// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: mom.proto

#include "mom.pb.h"
#include "mom.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
namespace mom {

static const char* MomService_method_names[] = {
  "/mom.MomService/RegistrarUsuario",
  "/mom.MomService/AutenticarUsuario",
  "/mom.MomService/GuardarTokenReplica",
  "/mom.MomService/CrearCola",
  "/mom.MomService/EliminarCola",
  "/mom.MomService/AutorizarUsuarioCola",
  "/mom.MomService/EnviarMensajeCola",
  "/mom.MomService/ConsumirMensajeCola",
  "/mom.MomService/ListarColas",
  "/mom.MomService/CrearTopico",
  "/mom.MomService/EliminarTopico",
  "/mom.MomService/SuscribirseTopico",
  "/mom.MomService/PublicarEnTopico",
  "/mom.MomService/ConsumirDesdeTopico",
  "/mom.MomService/ListarTopicos",
  "/mom.MomService/EnviarEventoReplica",
  "/mom.MomService/SolicitarEventos",
  "/mom.MomService/SolicitarPendientes",
};

std::unique_ptr< MomService::Stub> MomService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< MomService::Stub> stub(new MomService::Stub(channel, options));
  return stub;
}

MomService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_RegistrarUsuario_(MomService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AutenticarUsuario_(MomService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GuardarTokenReplica_(MomService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CrearCola_(MomService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_EliminarCola_(MomService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AutorizarUsuarioCola_(MomService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_EnviarMensajeCola_(MomService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ConsumirMensajeCola_(MomService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListarColas_(MomService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CrearTopico_(MomService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_EliminarTopico_(MomService_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SuscribirseTopico_(MomService_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_PublicarEnTopico_(MomService_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ConsumirDesdeTopico_(MomService_method_names[13], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListarTopicos_(MomService_method_names[14], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_EnviarEventoReplica_(MomService_method_names[15], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SolicitarEventos_(MomService_method_names[16], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SolicitarPendientes_(MomService_method_names[17], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status MomService::Stub::RegistrarUsuario(::grpc::ClientContext* context, const ::mom::Credenciales& request, ::mom::RespuestaSimple* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::Credenciales, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_RegistrarUsuario_, context, request, response);
}

void MomService::Stub::async::RegistrarUsuario(::grpc::ClientContext* context, const ::mom::Credenciales* request, ::mom::RespuestaSimple* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::Credenciales, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_RegistrarUsuario_, context, request, response, std::move(f));
}

void MomService::Stub::async::RegistrarUsuario(::grpc::ClientContext* context, const ::mom::Credenciales* request, ::mom::RespuestaSimple* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_RegistrarUsuario_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::PrepareAsyncRegistrarUsuarioRaw(::grpc::ClientContext* context, const ::mom::Credenciales& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::RespuestaSimple, ::mom::Credenciales, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_RegistrarUsuario_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::AsyncRegistrarUsuarioRaw(::grpc::ClientContext* context, const ::mom::Credenciales& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncRegistrarUsuarioRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::AutenticarUsuario(::grpc::ClientContext* context, const ::mom::Credenciales& request, ::mom::Token* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::Credenciales, ::mom::Token, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_AutenticarUsuario_, context, request, response);
}

void MomService::Stub::async::AutenticarUsuario(::grpc::ClientContext* context, const ::mom::Credenciales* request, ::mom::Token* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::Credenciales, ::mom::Token, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AutenticarUsuario_, context, request, response, std::move(f));
}

void MomService::Stub::async::AutenticarUsuario(::grpc::ClientContext* context, const ::mom::Credenciales* request, ::mom::Token* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AutenticarUsuario_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::Token>* MomService::Stub::PrepareAsyncAutenticarUsuarioRaw(::grpc::ClientContext* context, const ::mom::Credenciales& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::Token, ::mom::Credenciales, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_AutenticarUsuario_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::Token>* MomService::Stub::AsyncAutenticarUsuarioRaw(::grpc::ClientContext* context, const ::mom::Credenciales& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncAutenticarUsuarioRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::GuardarTokenReplica(::grpc::ClientContext* context, const ::mom::TokenConExpiracion& request, ::mom::RespuestaSimple* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::TokenConExpiracion, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GuardarTokenReplica_, context, request, response);
}

void MomService::Stub::async::GuardarTokenReplica(::grpc::ClientContext* context, const ::mom::TokenConExpiracion* request, ::mom::RespuestaSimple* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::TokenConExpiracion, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GuardarTokenReplica_, context, request, response, std::move(f));
}

void MomService::Stub::async::GuardarTokenReplica(::grpc::ClientContext* context, const ::mom::TokenConExpiracion* request, ::mom::RespuestaSimple* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GuardarTokenReplica_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::PrepareAsyncGuardarTokenReplicaRaw(::grpc::ClientContext* context, const ::mom::TokenConExpiracion& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::RespuestaSimple, ::mom::TokenConExpiracion, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GuardarTokenReplica_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::AsyncGuardarTokenReplicaRaw(::grpc::ClientContext* context, const ::mom::TokenConExpiracion& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGuardarTokenReplicaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::CrearCola(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::mom::RespuestaSimple* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CrearCola_, context, request, response);
}

void MomService::Stub::async::CrearCola(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CrearCola_, context, request, response, std::move(f));
}

void MomService::Stub::async::CrearCola(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CrearCola_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::PrepareAsyncCrearColaRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::RespuestaSimple, ::mom::AccionConToken, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CrearCola_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::AsyncCrearColaRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCrearColaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::EliminarCola(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::mom::RespuestaSimple* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_EliminarCola_, context, request, response);
}

void MomService::Stub::async::EliminarCola(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EliminarCola_, context, request, response, std::move(f));
}

void MomService::Stub::async::EliminarCola(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EliminarCola_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::PrepareAsyncEliminarColaRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::RespuestaSimple, ::mom::AccionConToken, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_EliminarCola_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::AsyncEliminarColaRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncEliminarColaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::AutorizarUsuarioCola(::grpc::ClientContext* context, const ::mom::AutorizacionColaRequest& request, ::mom::RespuestaSimple* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::AutorizacionColaRequest, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_AutorizarUsuarioCola_, context, request, response);
}

void MomService::Stub::async::AutorizarUsuarioCola(::grpc::ClientContext* context, const ::mom::AutorizacionColaRequest* request, ::mom::RespuestaSimple* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::AutorizacionColaRequest, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AutorizarUsuarioCola_, context, request, response, std::move(f));
}

void MomService::Stub::async::AutorizarUsuarioCola(::grpc::ClientContext* context, const ::mom::AutorizacionColaRequest* request, ::mom::RespuestaSimple* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AutorizarUsuarioCola_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::PrepareAsyncAutorizarUsuarioColaRaw(::grpc::ClientContext* context, const ::mom::AutorizacionColaRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::RespuestaSimple, ::mom::AutorizacionColaRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_AutorizarUsuarioCola_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::AsyncAutorizarUsuarioColaRaw(::grpc::ClientContext* context, const ::mom::AutorizacionColaRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncAutorizarUsuarioColaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::EnviarMensajeCola(::grpc::ClientContext* context, const ::mom::MensajeConToken& request, ::mom::RespuestaSimple* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::MensajeConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_EnviarMensajeCola_, context, request, response);
}

void MomService::Stub::async::EnviarMensajeCola(::grpc::ClientContext* context, const ::mom::MensajeConToken* request, ::mom::RespuestaSimple* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::MensajeConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EnviarMensajeCola_, context, request, response, std::move(f));
}

void MomService::Stub::async::EnviarMensajeCola(::grpc::ClientContext* context, const ::mom::MensajeConToken* request, ::mom::RespuestaSimple* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EnviarMensajeCola_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::PrepareAsyncEnviarMensajeColaRaw(::grpc::ClientContext* context, const ::mom::MensajeConToken& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::RespuestaSimple, ::mom::MensajeConToken, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_EnviarMensajeCola_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::AsyncEnviarMensajeColaRaw(::grpc::ClientContext* context, const ::mom::MensajeConToken& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncEnviarMensajeColaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::ConsumirMensajeCola(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::mom::MensajeTexto* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::AccionConToken, ::mom::MensajeTexto, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ConsumirMensajeCola_, context, request, response);
}

void MomService::Stub::async::ConsumirMensajeCola(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::MensajeTexto* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::AccionConToken, ::mom::MensajeTexto, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ConsumirMensajeCola_, context, request, response, std::move(f));
}

void MomService::Stub::async::ConsumirMensajeCola(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::MensajeTexto* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ConsumirMensajeCola_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::MensajeTexto>* MomService::Stub::PrepareAsyncConsumirMensajeColaRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::MensajeTexto, ::mom::AccionConToken, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ConsumirMensajeCola_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::MensajeTexto>* MomService::Stub::AsyncConsumirMensajeColaRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncConsumirMensajeColaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::ListarColas(::grpc::ClientContext* context, const ::mom::Token& request, ::mom::ListaNombres* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::Token, ::mom::ListaNombres, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListarColas_, context, request, response);
}

void MomService::Stub::async::ListarColas(::grpc::ClientContext* context, const ::mom::Token* request, ::mom::ListaNombres* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::Token, ::mom::ListaNombres, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListarColas_, context, request, response, std::move(f));
}

void MomService::Stub::async::ListarColas(::grpc::ClientContext* context, const ::mom::Token* request, ::mom::ListaNombres* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListarColas_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::ListaNombres>* MomService::Stub::PrepareAsyncListarColasRaw(::grpc::ClientContext* context, const ::mom::Token& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::ListaNombres, ::mom::Token, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListarColas_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::ListaNombres>* MomService::Stub::AsyncListarColasRaw(::grpc::ClientContext* context, const ::mom::Token& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListarColasRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::CrearTopico(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::mom::RespuestaSimple* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CrearTopico_, context, request, response);
}

void MomService::Stub::async::CrearTopico(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CrearTopico_, context, request, response, std::move(f));
}

void MomService::Stub::async::CrearTopico(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CrearTopico_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::PrepareAsyncCrearTopicoRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::RespuestaSimple, ::mom::AccionConToken, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CrearTopico_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::AsyncCrearTopicoRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCrearTopicoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::EliminarTopico(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::mom::RespuestaSimple* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_EliminarTopico_, context, request, response);
}

void MomService::Stub::async::EliminarTopico(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EliminarTopico_, context, request, response, std::move(f));
}

void MomService::Stub::async::EliminarTopico(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EliminarTopico_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::PrepareAsyncEliminarTopicoRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::RespuestaSimple, ::mom::AccionConToken, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_EliminarTopico_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::AsyncEliminarTopicoRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncEliminarTopicoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::SuscribirseTopico(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::mom::RespuestaSimple* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SuscribirseTopico_, context, request, response);
}

void MomService::Stub::async::SuscribirseTopico(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SuscribirseTopico_, context, request, response, std::move(f));
}

void MomService::Stub::async::SuscribirseTopico(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SuscribirseTopico_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::PrepareAsyncSuscribirseTopicoRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::RespuestaSimple, ::mom::AccionConToken, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SuscribirseTopico_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::AsyncSuscribirseTopicoRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSuscribirseTopicoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::PublicarEnTopico(::grpc::ClientContext* context, const ::mom::MensajeConToken& request, ::mom::RespuestaSimple* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::MensajeConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_PublicarEnTopico_, context, request, response);
}

void MomService::Stub::async::PublicarEnTopico(::grpc::ClientContext* context, const ::mom::MensajeConToken* request, ::mom::RespuestaSimple* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::MensajeConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_PublicarEnTopico_, context, request, response, std::move(f));
}

void MomService::Stub::async::PublicarEnTopico(::grpc::ClientContext* context, const ::mom::MensajeConToken* request, ::mom::RespuestaSimple* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_PublicarEnTopico_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::PrepareAsyncPublicarEnTopicoRaw(::grpc::ClientContext* context, const ::mom::MensajeConToken& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::RespuestaSimple, ::mom::MensajeConToken, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_PublicarEnTopico_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::AsyncPublicarEnTopicoRaw(::grpc::ClientContext* context, const ::mom::MensajeConToken& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncPublicarEnTopicoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::ConsumirDesdeTopico(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::mom::ListaMensajes* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::AccionConToken, ::mom::ListaMensajes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ConsumirDesdeTopico_, context, request, response);
}

void MomService::Stub::async::ConsumirDesdeTopico(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::ListaMensajes* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::AccionConToken, ::mom::ListaMensajes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ConsumirDesdeTopico_, context, request, response, std::move(f));
}

void MomService::Stub::async::ConsumirDesdeTopico(::grpc::ClientContext* context, const ::mom::AccionConToken* request, ::mom::ListaMensajes* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ConsumirDesdeTopico_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::ListaMensajes>* MomService::Stub::PrepareAsyncConsumirDesdeTopicoRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::ListaMensajes, ::mom::AccionConToken, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ConsumirDesdeTopico_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::ListaMensajes>* MomService::Stub::AsyncConsumirDesdeTopicoRaw(::grpc::ClientContext* context, const ::mom::AccionConToken& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncConsumirDesdeTopicoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::ListarTopicos(::grpc::ClientContext* context, const ::mom::Token& request, ::mom::ListaNombres* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::Token, ::mom::ListaNombres, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListarTopicos_, context, request, response);
}

void MomService::Stub::async::ListarTopicos(::grpc::ClientContext* context, const ::mom::Token* request, ::mom::ListaNombres* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::Token, ::mom::ListaNombres, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListarTopicos_, context, request, response, std::move(f));
}

void MomService::Stub::async::ListarTopicos(::grpc::ClientContext* context, const ::mom::Token* request, ::mom::ListaNombres* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListarTopicos_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::ListaNombres>* MomService::Stub::PrepareAsyncListarTopicosRaw(::grpc::ClientContext* context, const ::mom::Token& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::ListaNombres, ::mom::Token, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListarTopicos_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::ListaNombres>* MomService::Stub::AsyncListarTopicosRaw(::grpc::ClientContext* context, const ::mom::Token& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListarTopicosRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::EnviarEventoReplica(::grpc::ClientContext* context, const ::mom::EventoReplica& request, ::mom::RespuestaSimple* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::EventoReplica, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_EnviarEventoReplica_, context, request, response);
}

void MomService::Stub::async::EnviarEventoReplica(::grpc::ClientContext* context, const ::mom::EventoReplica* request, ::mom::RespuestaSimple* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::EventoReplica, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EnviarEventoReplica_, context, request, response, std::move(f));
}

void MomService::Stub::async::EnviarEventoReplica(::grpc::ClientContext* context, const ::mom::EventoReplica* request, ::mom::RespuestaSimple* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EnviarEventoReplica_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::PrepareAsyncEnviarEventoReplicaRaw(::grpc::ClientContext* context, const ::mom::EventoReplica& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::RespuestaSimple, ::mom::EventoReplica, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_EnviarEventoReplica_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::RespuestaSimple>* MomService::Stub::AsyncEnviarEventoReplicaRaw(::grpc::ClientContext* context, const ::mom::EventoReplica& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncEnviarEventoReplicaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::SolicitarEventos(::grpc::ClientContext* context, const ::mom::EventosRequest& request, ::mom::ListaEventos* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::EventosRequest, ::mom::ListaEventos, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SolicitarEventos_, context, request, response);
}

void MomService::Stub::async::SolicitarEventos(::grpc::ClientContext* context, const ::mom::EventosRequest* request, ::mom::ListaEventos* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::EventosRequest, ::mom::ListaEventos, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SolicitarEventos_, context, request, response, std::move(f));
}

void MomService::Stub::async::SolicitarEventos(::grpc::ClientContext* context, const ::mom::EventosRequest* request, ::mom::ListaEventos* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SolicitarEventos_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::ListaEventos>* MomService::Stub::PrepareAsyncSolicitarEventosRaw(::grpc::ClientContext* context, const ::mom::EventosRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::ListaEventos, ::mom::EventosRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SolicitarEventos_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::ListaEventos>* MomService::Stub::AsyncSolicitarEventosRaw(::grpc::ClientContext* context, const ::mom::EventosRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSolicitarEventosRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MomService::Stub::SolicitarPendientes(::grpc::ClientContext* context, const ::mom::PendientesRequest& request, ::mom::ListaEventos* response) {
  return ::grpc::internal::BlockingUnaryCall< ::mom::PendientesRequest, ::mom::ListaEventos, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SolicitarPendientes_, context, request, response);
}

void MomService::Stub::async::SolicitarPendientes(::grpc::ClientContext* context, const ::mom::PendientesRequest* request, ::mom::ListaEventos* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::mom::PendientesRequest, ::mom::ListaEventos, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SolicitarPendientes_, context, request, response, std::move(f));
}

void MomService::Stub::async::SolicitarPendientes(::grpc::ClientContext* context, const ::mom::PendientesRequest* request, ::mom::ListaEventos* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SolicitarPendientes_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::mom::ListaEventos>* MomService::Stub::PrepareAsyncSolicitarPendientesRaw(::grpc::ClientContext* context, const ::mom::PendientesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::mom::ListaEventos, ::mom::PendientesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SolicitarPendientes_, context, request);
}

::grpc::ClientAsyncResponseReader< ::mom::ListaEventos>* MomService::Stub::AsyncSolicitarPendientesRaw(::grpc::ClientContext* context, const ::mom::PendientesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSolicitarPendientesRaw(context, request, cq);
  result->StartCall();
  return result;
}

MomService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::Credenciales, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::Credenciales* req,
             ::mom::RespuestaSimple* resp) {
               return service->RegistrarUsuario(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::Credenciales, ::mom::Token, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::Credenciales* req,
             ::mom::Token* resp) {
               return service->AutenticarUsuario(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::TokenConExpiracion, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::TokenConExpiracion* req,
             ::mom::RespuestaSimple* resp) {
               return service->GuardarTokenReplica(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::AccionConToken* req,
             ::mom::RespuestaSimple* resp) {
               return service->CrearCola(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::AccionConToken* req,
             ::mom::RespuestaSimple* resp) {
               return service->EliminarCola(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::AutorizacionColaRequest, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::AutorizacionColaRequest* req,
             ::mom::RespuestaSimple* resp) {
               return service->AutorizarUsuarioCola(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::MensajeConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::MensajeConToken* req,
             ::mom::RespuestaSimple* resp) {
               return service->EnviarMensajeCola(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::AccionConToken, ::mom::MensajeTexto, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::AccionConToken* req,
             ::mom::MensajeTexto* resp) {
               return service->ConsumirMensajeCola(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::Token, ::mom::ListaNombres, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::Token* req,
             ::mom::ListaNombres* resp) {
               return service->ListarColas(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::AccionConToken* req,
             ::mom::RespuestaSimple* resp) {
               return service->CrearTopico(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::AccionConToken* req,
             ::mom::RespuestaSimple* resp) {
               return service->EliminarTopico(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::AccionConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::AccionConToken* req,
             ::mom::RespuestaSimple* resp) {
               return service->SuscribirseTopico(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::MensajeConToken, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::MensajeConToken* req,
             ::mom::RespuestaSimple* resp) {
               return service->PublicarEnTopico(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::AccionConToken, ::mom::ListaMensajes, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::AccionConToken* req,
             ::mom::ListaMensajes* resp) {
               return service->ConsumirDesdeTopico(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::Token, ::mom::ListaNombres, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::Token* req,
             ::mom::ListaNombres* resp) {
               return service->ListarTopicos(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::EventoReplica, ::mom::RespuestaSimple, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::EventoReplica* req,
             ::mom::RespuestaSimple* resp) {
               return service->EnviarEventoReplica(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::EventosRequest, ::mom::ListaEventos, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::EventosRequest* req,
             ::mom::ListaEventos* resp) {
               return service->SolicitarEventos(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MomService_method_names[17],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MomService::Service, ::mom::PendientesRequest, ::mom::ListaEventos, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MomService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::mom::PendientesRequest* req,
             ::mom::ListaEventos* resp) {
               return service->SolicitarPendientes(ctx, req, resp);
             }, this)));
}

MomService::Service::~Service() {
}

::grpc::Status MomService::Service::RegistrarUsuario(::grpc::ServerContext* context, const ::mom::Credenciales* request, ::mom::RespuestaSimple* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::AutenticarUsuario(::grpc::ServerContext* context, const ::mom::Credenciales* request, ::mom::Token* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::GuardarTokenReplica(::grpc::ServerContext* context, const ::mom::TokenConExpiracion* request, ::mom::RespuestaSimple* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::CrearCola(::grpc::ServerContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::EliminarCola(::grpc::ServerContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::AutorizarUsuarioCola(::grpc::ServerContext* context, const ::mom::AutorizacionColaRequest* request, ::mom::RespuestaSimple* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::EnviarMensajeCola(::grpc::ServerContext* context, const ::mom::MensajeConToken* request, ::mom::RespuestaSimple* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::ConsumirMensajeCola(::grpc::ServerContext* context, const ::mom::AccionConToken* request, ::mom::MensajeTexto* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::ListarColas(::grpc::ServerContext* context, const ::mom::Token* request, ::mom::ListaNombres* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::CrearTopico(::grpc::ServerContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::EliminarTopico(::grpc::ServerContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::SuscribirseTopico(::grpc::ServerContext* context, const ::mom::AccionConToken* request, ::mom::RespuestaSimple* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::PublicarEnTopico(::grpc::ServerContext* context, const ::mom::MensajeConToken* request, ::mom::RespuestaSimple* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::ConsumirDesdeTopico(::grpc::ServerContext* context, const ::mom::AccionConToken* request, ::mom::ListaMensajes* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::ListarTopicos(::grpc::ServerContext* context, const ::mom::Token* request, ::mom::ListaNombres* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::EnviarEventoReplica(::grpc::ServerContext* context, const ::mom::EventoReplica* request, ::mom::RespuestaSimple* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::SolicitarEventos(::grpc::ServerContext* context, const ::mom::EventosRequest* request, ::mom::ListaEventos* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MomService::Service::SolicitarPendientes(::grpc::ServerContext* context, const ::mom::PendientesRequest* request, ::mom::ListaEventos* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace mom

