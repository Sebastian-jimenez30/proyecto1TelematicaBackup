// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mom.proto

#include "mom.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace mom {
PROTOBUF_CONSTEXPR Credenciales::Credenciales(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.username_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CredencialesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CredencialesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CredencialesDefaultTypeInternal() {}
  union {
    Credenciales _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CredencialesDefaultTypeInternal _Credenciales_default_instance_;
PROTOBUF_CONSTEXPR TokenConExpiracion::TokenConExpiracion(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.username_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.expiracion_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TokenConExpiracionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TokenConExpiracionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TokenConExpiracionDefaultTypeInternal() {}
  union {
    TokenConExpiracion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TokenConExpiracionDefaultTypeInternal _TokenConExpiracion_default_instance_;
PROTOBUF_CONSTEXPR Token::Token(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TokenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TokenDefaultTypeInternal() {}
  union {
    Token _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TokenDefaultTypeInternal _Token_default_instance_;
PROTOBUF_CONSTEXPR AccionConToken::AccionConToken(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.nombre_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AccionConTokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccionConTokenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccionConTokenDefaultTypeInternal() {}
  union {
    AccionConToken _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccionConTokenDefaultTypeInternal _AccionConToken_default_instance_;
PROTOBUF_CONSTEXPR MensajeConToken::MensajeConToken(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.nombre_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.contenido_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MensajeConTokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MensajeConTokenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MensajeConTokenDefaultTypeInternal() {}
  union {
    MensajeConToken _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MensajeConTokenDefaultTypeInternal _MensajeConToken_default_instance_;
PROTOBUF_CONSTEXPR AutorizacionColaRequest::AutorizacionColaRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.nombre_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.usuarioobjetivo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AutorizacionColaRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AutorizacionColaRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AutorizacionColaRequestDefaultTypeInternal() {}
  union {
    AutorizacionColaRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AutorizacionColaRequestDefaultTypeInternal _AutorizacionColaRequest_default_instance_;
PROTOBUF_CONSTEXPR MensajeTexto::MensajeTexto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contenido_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.remitente_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.canal_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.timestamp_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MensajeTextoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MensajeTextoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MensajeTextoDefaultTypeInternal() {}
  union {
    MensajeTexto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MensajeTextoDefaultTypeInternal _MensajeTexto_default_instance_;
PROTOBUF_CONSTEXPR ListaMensajes::ListaMensajes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mensajes_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListaMensajesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListaMensajesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListaMensajesDefaultTypeInternal() {}
  union {
    ListaMensajes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListaMensajesDefaultTypeInternal _ListaMensajes_default_instance_;
PROTOBUF_CONSTEXPR ListaNombres::ListaNombres(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nombres_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListaNombresDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListaNombresDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListaNombresDefaultTypeInternal() {}
  union {
    ListaNombres _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListaNombresDefaultTypeInternal _ListaNombres_default_instance_;
PROTOBUF_CONSTEXPR EventoReplica::EventoReplica(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tipo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.entidad_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.datos_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.timestamp_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_origen_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EventoReplicaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventoReplicaDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventoReplicaDefaultTypeInternal() {}
  union {
    EventoReplica _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventoReplicaDefaultTypeInternal _EventoReplica_default_instance_;
PROTOBUF_CONSTEXPR ListaEventos::ListaEventos(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.eventos_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListaEventosDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListaEventosDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListaEventosDefaultTypeInternal() {}
  union {
    ListaEventos _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListaEventosDefaultTypeInternal _ListaEventos_default_instance_;
PROTOBUF_CONSTEXPR EventosRequest::EventosRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.desde_timestamp_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EventosRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventosRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventosRequestDefaultTypeInternal() {}
  union {
    EventosRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventosRequestDefaultTypeInternal _EventosRequest_default_instance_;
PROTOBUF_CONSTEXPR PendientesRequest::PendientesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nodo_destino_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PendientesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PendientesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PendientesRequestDefaultTypeInternal() {}
  union {
    PendientesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PendientesRequestDefaultTypeInternal _PendientesRequest_default_instance_;
PROTOBUF_CONSTEXPR RespuestaSimple::RespuestaSimple(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mensaje_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.exito_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespuestaSimpleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespuestaSimpleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespuestaSimpleDefaultTypeInternal() {}
  union {
    RespuestaSimple _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespuestaSimpleDefaultTypeInternal _RespuestaSimple_default_instance_;
}  // namespace mom
static ::_pb::Metadata file_level_metadata_mom_2eproto[14];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_mom_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_mom_2eproto = nullptr;

const uint32_t TableStruct_mom_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::Credenciales, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::Credenciales, _impl_.username_),
  PROTOBUF_FIELD_OFFSET(::mom::Credenciales, _impl_.password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::TokenConExpiracion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::TokenConExpiracion, _impl_.username_),
  PROTOBUF_FIELD_OFFSET(::mom::TokenConExpiracion, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::mom::TokenConExpiracion, _impl_.expiracion_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::Token, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::Token, _impl_.token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::AccionConToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::AccionConToken, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::mom::AccionConToken, _impl_.nombre_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::MensajeConToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::MensajeConToken, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::mom::MensajeConToken, _impl_.nombre_),
  PROTOBUF_FIELD_OFFSET(::mom::MensajeConToken, _impl_.contenido_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::AutorizacionColaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::AutorizacionColaRequest, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::mom::AutorizacionColaRequest, _impl_.nombre_),
  PROTOBUF_FIELD_OFFSET(::mom::AutorizacionColaRequest, _impl_.usuarioobjetivo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::MensajeTexto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::MensajeTexto, _impl_.contenido_),
  PROTOBUF_FIELD_OFFSET(::mom::MensajeTexto, _impl_.remitente_),
  PROTOBUF_FIELD_OFFSET(::mom::MensajeTexto, _impl_.canal_),
  PROTOBUF_FIELD_OFFSET(::mom::MensajeTexto, _impl_.timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::ListaMensajes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::ListaMensajes, _impl_.mensajes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::ListaNombres, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::ListaNombres, _impl_.nombres_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::EventoReplica, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::EventoReplica, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::mom::EventoReplica, _impl_.tipo_),
  PROTOBUF_FIELD_OFFSET(::mom::EventoReplica, _impl_.entidad_),
  PROTOBUF_FIELD_OFFSET(::mom::EventoReplica, _impl_.datos_),
  PROTOBUF_FIELD_OFFSET(::mom::EventoReplica, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::mom::EventoReplica, _impl_.id_origen_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::ListaEventos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::ListaEventos, _impl_.eventos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::EventosRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::EventosRequest, _impl_.desde_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::PendientesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::PendientesRequest, _impl_.nodo_destino_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mom::RespuestaSimple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mom::RespuestaSimple, _impl_.exito_),
  PROTOBUF_FIELD_OFFSET(::mom::RespuestaSimple, _impl_.mensaje_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::mom::Credenciales)},
  { 8, -1, -1, sizeof(::mom::TokenConExpiracion)},
  { 17, -1, -1, sizeof(::mom::Token)},
  { 24, -1, -1, sizeof(::mom::AccionConToken)},
  { 32, -1, -1, sizeof(::mom::MensajeConToken)},
  { 41, -1, -1, sizeof(::mom::AutorizacionColaRequest)},
  { 50, -1, -1, sizeof(::mom::MensajeTexto)},
  { 60, -1, -1, sizeof(::mom::ListaMensajes)},
  { 67, -1, -1, sizeof(::mom::ListaNombres)},
  { 74, -1, -1, sizeof(::mom::EventoReplica)},
  { 86, -1, -1, sizeof(::mom::ListaEventos)},
  { 93, -1, -1, sizeof(::mom::EventosRequest)},
  { 100, -1, -1, sizeof(::mom::PendientesRequest)},
  { 107, -1, -1, sizeof(::mom::RespuestaSimple)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::mom::_Credenciales_default_instance_._instance,
  &::mom::_TokenConExpiracion_default_instance_._instance,
  &::mom::_Token_default_instance_._instance,
  &::mom::_AccionConToken_default_instance_._instance,
  &::mom::_MensajeConToken_default_instance_._instance,
  &::mom::_AutorizacionColaRequest_default_instance_._instance,
  &::mom::_MensajeTexto_default_instance_._instance,
  &::mom::_ListaMensajes_default_instance_._instance,
  &::mom::_ListaNombres_default_instance_._instance,
  &::mom::_EventoReplica_default_instance_._instance,
  &::mom::_ListaEventos_default_instance_._instance,
  &::mom::_EventosRequest_default_instance_._instance,
  &::mom::_PendientesRequest_default_instance_._instance,
  &::mom::_RespuestaSimple_default_instance_._instance,
};

const char descriptor_table_protodef_mom_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tmom.proto\022\003mom\"2\n\014Credenciales\022\020\n\010user"
  "name\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"I\n\022TokenCon"
  "Expiracion\022\020\n\010username\030\001 \001(\t\022\r\n\005token\030\002 "
  "\001(\t\022\022\n\nexpiracion\030\003 \001(\t\"\026\n\005Token\022\r\n\005toke"
  "n\030\001 \001(\t\"/\n\016AccionConToken\022\r\n\005token\030\001 \001(\t"
  "\022\016\n\006nombre\030\002 \001(\t\"C\n\017MensajeConToken\022\r\n\005t"
  "oken\030\001 \001(\t\022\016\n\006nombre\030\002 \001(\t\022\021\n\tcontenido\030"
  "\003 \001(\t\"Q\n\027AutorizacionColaRequest\022\r\n\005toke"
  "n\030\001 \001(\t\022\016\n\006nombre\030\002 \001(\t\022\027\n\017usuarioObjeti"
  "vo\030\003 \001(\t\"V\n\014MensajeTexto\022\021\n\tcontenido\030\001 "
  "\001(\t\022\021\n\tremitente\030\002 \001(\t\022\r\n\005canal\030\003 \001(\t\022\021\n"
  "\ttimestamp\030\004 \001(\t\"4\n\rListaMensajes\022#\n\010men"
  "sajes\030\001 \003(\0132\021.mom.MensajeTexto\"\037\n\014ListaN"
  "ombres\022\017\n\007nombres\030\001 \003(\t\"o\n\rEventoReplica"
  "\022\n\n\002id\030\001 \001(\005\022\014\n\004tipo\030\002 \001(\t\022\017\n\007entidad\030\003 "
  "\001(\t\022\r\n\005datos\030\004 \001(\t\022\021\n\ttimestamp\030\005 \001(\t\022\021\n"
  "\tid_origen\030\006 \001(\t\"3\n\014ListaEventos\022#\n\007even"
  "tos\030\001 \003(\0132\022.mom.EventoReplica\")\n\016Eventos"
  "Request\022\027\n\017desde_timestamp\030\001 \001(\t\")\n\021Pend"
  "ientesRequest\022\024\n\014nodo_destino\030\001 \001(\t\"1\n\017R"
  "espuestaSimple\022\r\n\005exito\030\001 \001(\010\022\017\n\007mensaje"
  "\030\002 \001(\t2\326\010\n\nMomService\022;\n\020RegistrarUsuari"
  "o\022\021.mom.Credenciales\032\024.mom.RespuestaSimp"
  "le\0222\n\021AutenticarUsuario\022\021.mom.Credencial"
  "es\032\n.mom.Token\022D\n\023GuardarTokenReplica\022\027."
  "mom.TokenConExpiracion\032\024.mom.RespuestaSi"
  "mple\0226\n\tCrearCola\022\023.mom.AccionConToken\032\024"
  ".mom.RespuestaSimple\0229\n\014EliminarCola\022\023.m"
  "om.AccionConToken\032\024.mom.RespuestaSimple\022"
  "J\n\024AutorizarUsuarioCola\022\034.mom.Autorizaci"
  "onColaRequest\032\024.mom.RespuestaSimple\022\?\n\021E"
  "nviarMensajeCola\022\024.mom.MensajeConToken\032\024"
  ".mom.RespuestaSimple\022=\n\023ConsumirMensajeC"
  "ola\022\023.mom.AccionConToken\032\021.mom.MensajeTe"
  "xto\022,\n\013ListarColas\022\n.mom.Token\032\021.mom.Lis"
  "taNombres\0228\n\013CrearTopico\022\023.mom.AccionCon"
  "Token\032\024.mom.RespuestaSimple\022;\n\016EliminarT"
  "opico\022\023.mom.AccionConToken\032\024.mom.Respues"
  "taSimple\022>\n\021SuscribirseTopico\022\023.mom.Acci"
  "onConToken\032\024.mom.RespuestaSimple\022>\n\020Publ"
  "icarEnTopico\022\024.mom.MensajeConToken\032\024.mom"
  ".RespuestaSimple\022>\n\023ConsumirDesdeTopico\022"
  "\023.mom.AccionConToken\032\022.mom.ListaMensajes"
  "\022.\n\rListarTopicos\022\n.mom.Token\032\021.mom.List"
  "aNombres\022\?\n\023EnviarEventoReplica\022\022.mom.Ev"
  "entoReplica\032\024.mom.RespuestaSimple\022:\n\020Sol"
  "icitarEventos\022\023.mom.EventosRequest\032\021.mom"
  ".ListaEventos\022@\n\023SolicitarPendientes\022\026.m"
  "om.PendientesRequest\032\021.mom.ListaEventosB"
  "\005Z\003/pbb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_mom_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_mom_2eproto = {
    false, false, 1974, descriptor_table_protodef_mom_2eproto,
    "mom.proto",
    &descriptor_table_mom_2eproto_once, nullptr, 0, 14,
    schemas, file_default_instances, TableStruct_mom_2eproto::offsets,
    file_level_metadata_mom_2eproto, file_level_enum_descriptors_mom_2eproto,
    file_level_service_descriptors_mom_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_mom_2eproto_getter() {
  return &descriptor_table_mom_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_mom_2eproto(&descriptor_table_mom_2eproto);
namespace mom {

// ===================================================================

class Credenciales::_Internal {
 public:
};

Credenciales::Credenciales(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.Credenciales)
}
Credenciales::Credenciales(const Credenciales& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Credenciales* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mom.Credenciales)
}

inline void Credenciales::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Credenciales::~Credenciales() {
  // @@protoc_insertion_point(destructor:mom.Credenciales)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Credenciales::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
}

void Credenciales::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Credenciales::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.Credenciales)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Credenciales::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.Credenciales.username"));
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.Credenciales.password"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Credenciales::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.Credenciales)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.Credenciales.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.Credenciales.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.Credenciales)
  return target;
}

size_t Credenciales::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.Credenciales)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Credenciales::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Credenciales::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Credenciales::GetClassData() const { return &_class_data_; }


void Credenciales::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Credenciales*>(&to_msg);
  auto& from = static_cast<const Credenciales&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.Credenciales)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Credenciales::CopyFrom(const Credenciales& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.Credenciales)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Credenciales::IsInitialized() const {
  return true;
}

void Credenciales::InternalSwap(Credenciales* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.username_, lhs_arena,
      &other->_impl_.username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Credenciales::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[0]);
}

// ===================================================================

class TokenConExpiracion::_Internal {
 public:
};

TokenConExpiracion::TokenConExpiracion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.TokenConExpiracion)
}
TokenConExpiracion::TokenConExpiracion(const TokenConExpiracion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TokenConExpiracion* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.token_){}
    , decltype(_impl_.expiracion_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), 
      _this->GetArenaForAllocation());
  }
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.expiracion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.expiracion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_expiracion().empty()) {
    _this->_impl_.expiracion_.Set(from._internal_expiracion(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mom.TokenConExpiracion)
}

inline void TokenConExpiracion::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.token_){}
    , decltype(_impl_.expiracion_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.expiracion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.expiracion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TokenConExpiracion::~TokenConExpiracion() {
  // @@protoc_insertion_point(destructor:mom.TokenConExpiracion)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TokenConExpiracion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.username_.Destroy();
  _impl_.token_.Destroy();
  _impl_.expiracion_.Destroy();
}

void TokenConExpiracion::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TokenConExpiracion::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.TokenConExpiracion)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.token_.ClearToEmpty();
  _impl_.expiracion_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TokenConExpiracion::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.TokenConExpiracion.username"));
        } else
          goto handle_unusual;
        continue;
      // string token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.TokenConExpiracion.token"));
        } else
          goto handle_unusual;
        continue;
      // string expiracion = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_expiracion();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.TokenConExpiracion.expiracion"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TokenConExpiracion::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.TokenConExpiracion)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.TokenConExpiracion.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // string token = 2;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.TokenConExpiracion.token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_token(), target);
  }

  // string expiracion = 3;
  if (!this->_internal_expiracion().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expiracion().data(), static_cast<int>(this->_internal_expiracion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.TokenConExpiracion.expiracion");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_expiracion(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.TokenConExpiracion)
  return target;
}

size_t TokenConExpiracion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.TokenConExpiracion)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string token = 2;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string expiracion = 3;
  if (!this->_internal_expiracion().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_expiracion());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TokenConExpiracion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TokenConExpiracion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TokenConExpiracion::GetClassData() const { return &_class_data_; }


void TokenConExpiracion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TokenConExpiracion*>(&to_msg);
  auto& from = static_cast<const TokenConExpiracion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.TokenConExpiracion)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_expiracion().empty()) {
    _this->_internal_set_expiracion(from._internal_expiracion());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TokenConExpiracion::CopyFrom(const TokenConExpiracion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.TokenConExpiracion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TokenConExpiracion::IsInitialized() const {
  return true;
}

void TokenConExpiracion::InternalSwap(TokenConExpiracion* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.username_, lhs_arena,
      &other->_impl_.username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.expiracion_, lhs_arena,
      &other->_impl_.expiracion_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TokenConExpiracion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[1]);
}

// ===================================================================

class Token::_Internal {
 public:
};

Token::Token(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.Token)
}
Token::Token(const Token& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Token* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mom.Token)
}

inline void Token::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Token::~Token() {
  // @@protoc_insertion_point(destructor:mom.Token)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Token::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
}

void Token::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Token::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.Token)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Token::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.Token.token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Token::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.Token)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.Token.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.Token)
  return target;
}

size_t Token::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.Token)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Token::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Token::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Token::GetClassData() const { return &_class_data_; }


void Token::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Token*>(&to_msg);
  auto& from = static_cast<const Token&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.Token)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Token::CopyFrom(const Token& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.Token)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Token::IsInitialized() const {
  return true;
}

void Token::InternalSwap(Token* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Token::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[2]);
}

// ===================================================================

class AccionConToken::_Internal {
 public:
};

AccionConToken::AccionConToken(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.AccionConToken)
}
AccionConToken::AccionConToken(const AccionConToken& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AccionConToken* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.nombre_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.nombre_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nombre_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nombre().empty()) {
    _this->_impl_.nombre_.Set(from._internal_nombre(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mom.AccionConToken)
}

inline void AccionConToken::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.nombre_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nombre_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nombre_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AccionConToken::~AccionConToken() {
  // @@protoc_insertion_point(destructor:mom.AccionConToken)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AccionConToken::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
  _impl_.nombre_.Destroy();
}

void AccionConToken::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AccionConToken::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.AccionConToken)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _impl_.nombre_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccionConToken::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.AccionConToken.token"));
        } else
          goto handle_unusual;
        continue;
      // string nombre = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nombre();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.AccionConToken.nombre"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AccionConToken::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.AccionConToken)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.AccionConToken.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string nombre = 2;
  if (!this->_internal_nombre().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nombre().data(), static_cast<int>(this->_internal_nombre().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.AccionConToken.nombre");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nombre(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.AccionConToken)
  return target;
}

size_t AccionConToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.AccionConToken)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string nombre = 2;
  if (!this->_internal_nombre().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nombre());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AccionConToken::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AccionConToken::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AccionConToken::GetClassData() const { return &_class_data_; }


void AccionConToken::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AccionConToken*>(&to_msg);
  auto& from = static_cast<const AccionConToken&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.AccionConToken)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_nombre().empty()) {
    _this->_internal_set_nombre(from._internal_nombre());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AccionConToken::CopyFrom(const AccionConToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.AccionConToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccionConToken::IsInitialized() const {
  return true;
}

void AccionConToken::InternalSwap(AccionConToken* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nombre_, lhs_arena,
      &other->_impl_.nombre_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AccionConToken::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[3]);
}

// ===================================================================

class MensajeConToken::_Internal {
 public:
};

MensajeConToken::MensajeConToken(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.MensajeConToken)
}
MensajeConToken::MensajeConToken(const MensajeConToken& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MensajeConToken* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.nombre_){}
    , decltype(_impl_.contenido_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.nombre_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nombre_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nombre().empty()) {
    _this->_impl_.nombre_.Set(from._internal_nombre(), 
      _this->GetArenaForAllocation());
  }
  _impl_.contenido_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.contenido_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contenido().empty()) {
    _this->_impl_.contenido_.Set(from._internal_contenido(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mom.MensajeConToken)
}

inline void MensajeConToken::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.nombre_){}
    , decltype(_impl_.contenido_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nombre_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nombre_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.contenido_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.contenido_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MensajeConToken::~MensajeConToken() {
  // @@protoc_insertion_point(destructor:mom.MensajeConToken)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MensajeConToken::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
  _impl_.nombre_.Destroy();
  _impl_.contenido_.Destroy();
}

void MensajeConToken::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MensajeConToken::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.MensajeConToken)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _impl_.nombre_.ClearToEmpty();
  _impl_.contenido_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MensajeConToken::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.MensajeConToken.token"));
        } else
          goto handle_unusual;
        continue;
      // string nombre = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nombre();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.MensajeConToken.nombre"));
        } else
          goto handle_unusual;
        continue;
      // string contenido = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_contenido();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.MensajeConToken.contenido"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MensajeConToken::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.MensajeConToken)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.MensajeConToken.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string nombre = 2;
  if (!this->_internal_nombre().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nombre().data(), static_cast<int>(this->_internal_nombre().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.MensajeConToken.nombre");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nombre(), target);
  }

  // string contenido = 3;
  if (!this->_internal_contenido().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contenido().data(), static_cast<int>(this->_internal_contenido().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.MensajeConToken.contenido");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_contenido(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.MensajeConToken)
  return target;
}

size_t MensajeConToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.MensajeConToken)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string nombre = 2;
  if (!this->_internal_nombre().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nombre());
  }

  // string contenido = 3;
  if (!this->_internal_contenido().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contenido());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MensajeConToken::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MensajeConToken::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MensajeConToken::GetClassData() const { return &_class_data_; }


void MensajeConToken::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MensajeConToken*>(&to_msg);
  auto& from = static_cast<const MensajeConToken&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.MensajeConToken)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_nombre().empty()) {
    _this->_internal_set_nombre(from._internal_nombre());
  }
  if (!from._internal_contenido().empty()) {
    _this->_internal_set_contenido(from._internal_contenido());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MensajeConToken::CopyFrom(const MensajeConToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.MensajeConToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MensajeConToken::IsInitialized() const {
  return true;
}

void MensajeConToken::InternalSwap(MensajeConToken* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nombre_, lhs_arena,
      &other->_impl_.nombre_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.contenido_, lhs_arena,
      &other->_impl_.contenido_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MensajeConToken::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[4]);
}

// ===================================================================

class AutorizacionColaRequest::_Internal {
 public:
};

AutorizacionColaRequest::AutorizacionColaRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.AutorizacionColaRequest)
}
AutorizacionColaRequest::AutorizacionColaRequest(const AutorizacionColaRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AutorizacionColaRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.nombre_){}
    , decltype(_impl_.usuarioobjetivo_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.nombre_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nombre_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nombre().empty()) {
    _this->_impl_.nombre_.Set(from._internal_nombre(), 
      _this->GetArenaForAllocation());
  }
  _impl_.usuarioobjetivo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.usuarioobjetivo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_usuarioobjetivo().empty()) {
    _this->_impl_.usuarioobjetivo_.Set(from._internal_usuarioobjetivo(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mom.AutorizacionColaRequest)
}

inline void AutorizacionColaRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.nombre_){}
    , decltype(_impl_.usuarioobjetivo_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nombre_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nombre_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.usuarioobjetivo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.usuarioobjetivo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AutorizacionColaRequest::~AutorizacionColaRequest() {
  // @@protoc_insertion_point(destructor:mom.AutorizacionColaRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AutorizacionColaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
  _impl_.nombre_.Destroy();
  _impl_.usuarioobjetivo_.Destroy();
}

void AutorizacionColaRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AutorizacionColaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.AutorizacionColaRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _impl_.nombre_.ClearToEmpty();
  _impl_.usuarioobjetivo_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutorizacionColaRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.AutorizacionColaRequest.token"));
        } else
          goto handle_unusual;
        continue;
      // string nombre = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nombre();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.AutorizacionColaRequest.nombre"));
        } else
          goto handle_unusual;
        continue;
      // string usuarioObjetivo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_usuarioobjetivo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.AutorizacionColaRequest.usuarioObjetivo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AutorizacionColaRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.AutorizacionColaRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.AutorizacionColaRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string nombre = 2;
  if (!this->_internal_nombre().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nombre().data(), static_cast<int>(this->_internal_nombre().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.AutorizacionColaRequest.nombre");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nombre(), target);
  }

  // string usuarioObjetivo = 3;
  if (!this->_internal_usuarioobjetivo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_usuarioobjetivo().data(), static_cast<int>(this->_internal_usuarioobjetivo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.AutorizacionColaRequest.usuarioObjetivo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_usuarioobjetivo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.AutorizacionColaRequest)
  return target;
}

size_t AutorizacionColaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.AutorizacionColaRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string nombre = 2;
  if (!this->_internal_nombre().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nombre());
  }

  // string usuarioObjetivo = 3;
  if (!this->_internal_usuarioobjetivo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_usuarioobjetivo());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AutorizacionColaRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AutorizacionColaRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AutorizacionColaRequest::GetClassData() const { return &_class_data_; }


void AutorizacionColaRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AutorizacionColaRequest*>(&to_msg);
  auto& from = static_cast<const AutorizacionColaRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.AutorizacionColaRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_nombre().empty()) {
    _this->_internal_set_nombre(from._internal_nombre());
  }
  if (!from._internal_usuarioobjetivo().empty()) {
    _this->_internal_set_usuarioobjetivo(from._internal_usuarioobjetivo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AutorizacionColaRequest::CopyFrom(const AutorizacionColaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.AutorizacionColaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutorizacionColaRequest::IsInitialized() const {
  return true;
}

void AutorizacionColaRequest::InternalSwap(AutorizacionColaRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nombre_, lhs_arena,
      &other->_impl_.nombre_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.usuarioobjetivo_, lhs_arena,
      &other->_impl_.usuarioobjetivo_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AutorizacionColaRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[5]);
}

// ===================================================================

class MensajeTexto::_Internal {
 public:
};

MensajeTexto::MensajeTexto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.MensajeTexto)
}
MensajeTexto::MensajeTexto(const MensajeTexto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MensajeTexto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contenido_){}
    , decltype(_impl_.remitente_){}
    , decltype(_impl_.canal_){}
    , decltype(_impl_.timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.contenido_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.contenido_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contenido().empty()) {
    _this->_impl_.contenido_.Set(from._internal_contenido(), 
      _this->GetArenaForAllocation());
  }
  _impl_.remitente_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.remitente_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remitente().empty()) {
    _this->_impl_.remitente_.Set(from._internal_remitente(), 
      _this->GetArenaForAllocation());
  }
  _impl_.canal_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.canal_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_canal().empty()) {
    _this->_impl_.canal_.Set(from._internal_canal(), 
      _this->GetArenaForAllocation());
  }
  _impl_.timestamp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.timestamp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_timestamp().empty()) {
    _this->_impl_.timestamp_.Set(from._internal_timestamp(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mom.MensajeTexto)
}

inline void MensajeTexto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contenido_){}
    , decltype(_impl_.remitente_){}
    , decltype(_impl_.canal_){}
    , decltype(_impl_.timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.contenido_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.contenido_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.remitente_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.remitente_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.canal_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.canal_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.timestamp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.timestamp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MensajeTexto::~MensajeTexto() {
  // @@protoc_insertion_point(destructor:mom.MensajeTexto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MensajeTexto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contenido_.Destroy();
  _impl_.remitente_.Destroy();
  _impl_.canal_.Destroy();
  _impl_.timestamp_.Destroy();
}

void MensajeTexto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MensajeTexto::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.MensajeTexto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contenido_.ClearToEmpty();
  _impl_.remitente_.ClearToEmpty();
  _impl_.canal_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MensajeTexto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string contenido = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_contenido();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.MensajeTexto.contenido"));
        } else
          goto handle_unusual;
        continue;
      // string remitente = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_remitente();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.MensajeTexto.remitente"));
        } else
          goto handle_unusual;
        continue;
      // string canal = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_canal();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.MensajeTexto.canal"));
        } else
          goto handle_unusual;
        continue;
      // string timestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_timestamp();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.MensajeTexto.timestamp"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MensajeTexto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.MensajeTexto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string contenido = 1;
  if (!this->_internal_contenido().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contenido().data(), static_cast<int>(this->_internal_contenido().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.MensajeTexto.contenido");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_contenido(), target);
  }

  // string remitente = 2;
  if (!this->_internal_remitente().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_remitente().data(), static_cast<int>(this->_internal_remitente().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.MensajeTexto.remitente");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_remitente(), target);
  }

  // string canal = 3;
  if (!this->_internal_canal().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_canal().data(), static_cast<int>(this->_internal_canal().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.MensajeTexto.canal");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_canal(), target);
  }

  // string timestamp = 4;
  if (!this->_internal_timestamp().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_timestamp().data(), static_cast<int>(this->_internal_timestamp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.MensajeTexto.timestamp");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.MensajeTexto)
  return target;
}

size_t MensajeTexto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.MensajeTexto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string contenido = 1;
  if (!this->_internal_contenido().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contenido());
  }

  // string remitente = 2;
  if (!this->_internal_remitente().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_remitente());
  }

  // string canal = 3;
  if (!this->_internal_canal().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_canal());
  }

  // string timestamp = 4;
  if (!this->_internal_timestamp().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MensajeTexto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MensajeTexto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MensajeTexto::GetClassData() const { return &_class_data_; }


void MensajeTexto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MensajeTexto*>(&to_msg);
  auto& from = static_cast<const MensajeTexto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.MensajeTexto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contenido().empty()) {
    _this->_internal_set_contenido(from._internal_contenido());
  }
  if (!from._internal_remitente().empty()) {
    _this->_internal_set_remitente(from._internal_remitente());
  }
  if (!from._internal_canal().empty()) {
    _this->_internal_set_canal(from._internal_canal());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MensajeTexto::CopyFrom(const MensajeTexto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.MensajeTexto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MensajeTexto::IsInitialized() const {
  return true;
}

void MensajeTexto::InternalSwap(MensajeTexto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.contenido_, lhs_arena,
      &other->_impl_.contenido_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.remitente_, lhs_arena,
      &other->_impl_.remitente_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.canal_, lhs_arena,
      &other->_impl_.canal_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.timestamp_, lhs_arena,
      &other->_impl_.timestamp_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MensajeTexto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[6]);
}

// ===================================================================

class ListaMensajes::_Internal {
 public:
};

ListaMensajes::ListaMensajes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.ListaMensajes)
}
ListaMensajes::ListaMensajes(const ListaMensajes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListaMensajes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mensajes_){from._impl_.mensajes_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mom.ListaMensajes)
}

inline void ListaMensajes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mensajes_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListaMensajes::~ListaMensajes() {
  // @@protoc_insertion_point(destructor:mom.ListaMensajes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListaMensajes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mensajes_.~RepeatedPtrField();
}

void ListaMensajes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListaMensajes::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.ListaMensajes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mensajes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListaMensajes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .mom.MensajeTexto mensajes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mensajes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListaMensajes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.ListaMensajes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mom.MensajeTexto mensajes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mensajes_size()); i < n; i++) {
    const auto& repfield = this->_internal_mensajes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.ListaMensajes)
  return target;
}

size_t ListaMensajes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.ListaMensajes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mom.MensajeTexto mensajes = 1;
  total_size += 1UL * this->_internal_mensajes_size();
  for (const auto& msg : this->_impl_.mensajes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListaMensajes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListaMensajes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListaMensajes::GetClassData() const { return &_class_data_; }


void ListaMensajes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListaMensajes*>(&to_msg);
  auto& from = static_cast<const ListaMensajes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.ListaMensajes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.mensajes_.MergeFrom(from._impl_.mensajes_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListaMensajes::CopyFrom(const ListaMensajes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.ListaMensajes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListaMensajes::IsInitialized() const {
  return true;
}

void ListaMensajes::InternalSwap(ListaMensajes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.mensajes_.InternalSwap(&other->_impl_.mensajes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListaMensajes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[7]);
}

// ===================================================================

class ListaNombres::_Internal {
 public:
};

ListaNombres::ListaNombres(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.ListaNombres)
}
ListaNombres::ListaNombres(const ListaNombres& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListaNombres* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nombres_){from._impl_.nombres_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mom.ListaNombres)
}

inline void ListaNombres::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nombres_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListaNombres::~ListaNombres() {
  // @@protoc_insertion_point(destructor:mom.ListaNombres)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListaNombres::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nombres_.~RepeatedPtrField();
}

void ListaNombres::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListaNombres::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.ListaNombres)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nombres_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListaNombres::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string nombres = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_nombres();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "mom.ListaNombres.nombres"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListaNombres::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.ListaNombres)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string nombres = 1;
  for (int i = 0, n = this->_internal_nombres_size(); i < n; i++) {
    const auto& s = this->_internal_nombres(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.ListaNombres.nombres");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.ListaNombres)
  return target;
}

size_t ListaNombres::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.ListaNombres)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string nombres = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.nombres_.size());
  for (int i = 0, n = _impl_.nombres_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.nombres_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListaNombres::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListaNombres::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListaNombres::GetClassData() const { return &_class_data_; }


void ListaNombres::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListaNombres*>(&to_msg);
  auto& from = static_cast<const ListaNombres&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.ListaNombres)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.nombres_.MergeFrom(from._impl_.nombres_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListaNombres::CopyFrom(const ListaNombres& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.ListaNombres)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListaNombres::IsInitialized() const {
  return true;
}

void ListaNombres::InternalSwap(ListaNombres* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nombres_.InternalSwap(&other->_impl_.nombres_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListaNombres::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[8]);
}

// ===================================================================

class EventoReplica::_Internal {
 public:
};

EventoReplica::EventoReplica(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.EventoReplica)
}
EventoReplica::EventoReplica(const EventoReplica& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EventoReplica* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tipo_){}
    , decltype(_impl_.entidad_){}
    , decltype(_impl_.datos_){}
    , decltype(_impl_.timestamp_){}
    , decltype(_impl_.id_origen_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tipo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tipo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tipo().empty()) {
    _this->_impl_.tipo_.Set(from._internal_tipo(), 
      _this->GetArenaForAllocation());
  }
  _impl_.entidad_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.entidad_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entidad().empty()) {
    _this->_impl_.entidad_.Set(from._internal_entidad(), 
      _this->GetArenaForAllocation());
  }
  _impl_.datos_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.datos_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_datos().empty()) {
    _this->_impl_.datos_.Set(from._internal_datos(), 
      _this->GetArenaForAllocation());
  }
  _impl_.timestamp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.timestamp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_timestamp().empty()) {
    _this->_impl_.timestamp_.Set(from._internal_timestamp(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_origen_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_origen_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id_origen().empty()) {
    _this->_impl_.id_origen_.Set(from._internal_id_origen(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:mom.EventoReplica)
}

inline void EventoReplica::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tipo_){}
    , decltype(_impl_.entidad_){}
    , decltype(_impl_.datos_){}
    , decltype(_impl_.timestamp_){}
    , decltype(_impl_.id_origen_){}
    , decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tipo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tipo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.entidad_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.entidad_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.datos_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.datos_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.timestamp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.timestamp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_origen_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_origen_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EventoReplica::~EventoReplica() {
  // @@protoc_insertion_point(destructor:mom.EventoReplica)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EventoReplica::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tipo_.Destroy();
  _impl_.entidad_.Destroy();
  _impl_.datos_.Destroy();
  _impl_.timestamp_.Destroy();
  _impl_.id_origen_.Destroy();
}

void EventoReplica::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EventoReplica::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.EventoReplica)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tipo_.ClearToEmpty();
  _impl_.entidad_.ClearToEmpty();
  _impl_.datos_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.id_origen_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EventoReplica::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string tipo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_tipo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.EventoReplica.tipo"));
        } else
          goto handle_unusual;
        continue;
      // string entidad = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_entidad();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.EventoReplica.entidad"));
        } else
          goto handle_unusual;
        continue;
      // string datos = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_datos();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.EventoReplica.datos"));
        } else
          goto handle_unusual;
        continue;
      // string timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_timestamp();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.EventoReplica.timestamp"));
        } else
          goto handle_unusual;
        continue;
      // string id_origen = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_id_origen();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.EventoReplica.id_origen"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EventoReplica::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.EventoReplica)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // string tipo = 2;
  if (!this->_internal_tipo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tipo().data(), static_cast<int>(this->_internal_tipo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.EventoReplica.tipo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tipo(), target);
  }

  // string entidad = 3;
  if (!this->_internal_entidad().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entidad().data(), static_cast<int>(this->_internal_entidad().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.EventoReplica.entidad");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_entidad(), target);
  }

  // string datos = 4;
  if (!this->_internal_datos().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datos().data(), static_cast<int>(this->_internal_datos().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.EventoReplica.datos");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_datos(), target);
  }

  // string timestamp = 5;
  if (!this->_internal_timestamp().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_timestamp().data(), static_cast<int>(this->_internal_timestamp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.EventoReplica.timestamp");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_timestamp(), target);
  }

  // string id_origen = 6;
  if (!this->_internal_id_origen().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id_origen().data(), static_cast<int>(this->_internal_id_origen().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.EventoReplica.id_origen");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_id_origen(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.EventoReplica)
  return target;
}

size_t EventoReplica::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.EventoReplica)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tipo = 2;
  if (!this->_internal_tipo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tipo());
  }

  // string entidad = 3;
  if (!this->_internal_entidad().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entidad());
  }

  // string datos = 4;
  if (!this->_internal_datos().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datos());
  }

  // string timestamp = 5;
  if (!this->_internal_timestamp().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_timestamp());
  }

  // string id_origen = 6;
  if (!this->_internal_id_origen().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id_origen());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EventoReplica::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EventoReplica::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EventoReplica::GetClassData() const { return &_class_data_; }


void EventoReplica::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EventoReplica*>(&to_msg);
  auto& from = static_cast<const EventoReplica&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.EventoReplica)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tipo().empty()) {
    _this->_internal_set_tipo(from._internal_tipo());
  }
  if (!from._internal_entidad().empty()) {
    _this->_internal_set_entidad(from._internal_entidad());
  }
  if (!from._internal_datos().empty()) {
    _this->_internal_set_datos(from._internal_datos());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_id_origen().empty()) {
    _this->_internal_set_id_origen(from._internal_id_origen());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EventoReplica::CopyFrom(const EventoReplica& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.EventoReplica)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventoReplica::IsInitialized() const {
  return true;
}

void EventoReplica::InternalSwap(EventoReplica* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tipo_, lhs_arena,
      &other->_impl_.tipo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.entidad_, lhs_arena,
      &other->_impl_.entidad_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.datos_, lhs_arena,
      &other->_impl_.datos_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.timestamp_, lhs_arena,
      &other->_impl_.timestamp_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_origen_, lhs_arena,
      &other->_impl_.id_origen_, rhs_arena
  );
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EventoReplica::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[9]);
}

// ===================================================================

class ListaEventos::_Internal {
 public:
};

ListaEventos::ListaEventos(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.ListaEventos)
}
ListaEventos::ListaEventos(const ListaEventos& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListaEventos* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.eventos_){from._impl_.eventos_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mom.ListaEventos)
}

inline void ListaEventos::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.eventos_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListaEventos::~ListaEventos() {
  // @@protoc_insertion_point(destructor:mom.ListaEventos)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListaEventos::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.eventos_.~RepeatedPtrField();
}

void ListaEventos::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListaEventos::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.ListaEventos)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.eventos_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListaEventos::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .mom.EventoReplica eventos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_eventos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListaEventos::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.ListaEventos)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mom.EventoReplica eventos = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_eventos_size()); i < n; i++) {
    const auto& repfield = this->_internal_eventos(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.ListaEventos)
  return target;
}

size_t ListaEventos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.ListaEventos)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mom.EventoReplica eventos = 1;
  total_size += 1UL * this->_internal_eventos_size();
  for (const auto& msg : this->_impl_.eventos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListaEventos::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListaEventos::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListaEventos::GetClassData() const { return &_class_data_; }


void ListaEventos::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListaEventos*>(&to_msg);
  auto& from = static_cast<const ListaEventos&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.ListaEventos)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.eventos_.MergeFrom(from._impl_.eventos_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListaEventos::CopyFrom(const ListaEventos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.ListaEventos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListaEventos::IsInitialized() const {
  return true;
}

void ListaEventos::InternalSwap(ListaEventos* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.eventos_.InternalSwap(&other->_impl_.eventos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListaEventos::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[10]);
}

// ===================================================================

class EventosRequest::_Internal {
 public:
};

EventosRequest::EventosRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.EventosRequest)
}
EventosRequest::EventosRequest(const EventosRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EventosRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.desde_timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.desde_timestamp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.desde_timestamp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_desde_timestamp().empty()) {
    _this->_impl_.desde_timestamp_.Set(from._internal_desde_timestamp(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mom.EventosRequest)
}

inline void EventosRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.desde_timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.desde_timestamp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.desde_timestamp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EventosRequest::~EventosRequest() {
  // @@protoc_insertion_point(destructor:mom.EventosRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EventosRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.desde_timestamp_.Destroy();
}

void EventosRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EventosRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.EventosRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.desde_timestamp_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EventosRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string desde_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_desde_timestamp();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.EventosRequest.desde_timestamp"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EventosRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.EventosRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string desde_timestamp = 1;
  if (!this->_internal_desde_timestamp().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desde_timestamp().data(), static_cast<int>(this->_internal_desde_timestamp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.EventosRequest.desde_timestamp");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_desde_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.EventosRequest)
  return target;
}

size_t EventosRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.EventosRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string desde_timestamp = 1;
  if (!this->_internal_desde_timestamp().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desde_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EventosRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EventosRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EventosRequest::GetClassData() const { return &_class_data_; }


void EventosRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EventosRequest*>(&to_msg);
  auto& from = static_cast<const EventosRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.EventosRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_desde_timestamp().empty()) {
    _this->_internal_set_desde_timestamp(from._internal_desde_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EventosRequest::CopyFrom(const EventosRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.EventosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventosRequest::IsInitialized() const {
  return true;
}

void EventosRequest::InternalSwap(EventosRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.desde_timestamp_, lhs_arena,
      &other->_impl_.desde_timestamp_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata EventosRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[11]);
}

// ===================================================================

class PendientesRequest::_Internal {
 public:
};

PendientesRequest::PendientesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.PendientesRequest)
}
PendientesRequest::PendientesRequest(const PendientesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PendientesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nodo_destino_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nodo_destino_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nodo_destino_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nodo_destino().empty()) {
    _this->_impl_.nodo_destino_.Set(from._internal_nodo_destino(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mom.PendientesRequest)
}

inline void PendientesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nodo_destino_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.nodo_destino_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nodo_destino_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PendientesRequest::~PendientesRequest() {
  // @@protoc_insertion_point(destructor:mom.PendientesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PendientesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nodo_destino_.Destroy();
}

void PendientesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PendientesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.PendientesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodo_destino_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PendientesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string nodo_destino = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_nodo_destino();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.PendientesRequest.nodo_destino"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PendientesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.PendientesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string nodo_destino = 1;
  if (!this->_internal_nodo_destino().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nodo_destino().data(), static_cast<int>(this->_internal_nodo_destino().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.PendientesRequest.nodo_destino");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_nodo_destino(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.PendientesRequest)
  return target;
}

size_t PendientesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.PendientesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nodo_destino = 1;
  if (!this->_internal_nodo_destino().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nodo_destino());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PendientesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PendientesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PendientesRequest::GetClassData() const { return &_class_data_; }


void PendientesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PendientesRequest*>(&to_msg);
  auto& from = static_cast<const PendientesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.PendientesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nodo_destino().empty()) {
    _this->_internal_set_nodo_destino(from._internal_nodo_destino());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PendientesRequest::CopyFrom(const PendientesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.PendientesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PendientesRequest::IsInitialized() const {
  return true;
}

void PendientesRequest::InternalSwap(PendientesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nodo_destino_, lhs_arena,
      &other->_impl_.nodo_destino_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PendientesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[12]);
}

// ===================================================================

class RespuestaSimple::_Internal {
 public:
};

RespuestaSimple::RespuestaSimple(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mom.RespuestaSimple)
}
RespuestaSimple::RespuestaSimple(const RespuestaSimple& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespuestaSimple* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mensaje_){}
    , decltype(_impl_.exito_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mensaje_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mensaje_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mensaje().empty()) {
    _this->_impl_.mensaje_.Set(from._internal_mensaje(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.exito_ = from._impl_.exito_;
  // @@protoc_insertion_point(copy_constructor:mom.RespuestaSimple)
}

inline void RespuestaSimple::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mensaje_){}
    , decltype(_impl_.exito_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mensaje_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mensaje_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RespuestaSimple::~RespuestaSimple() {
  // @@protoc_insertion_point(destructor:mom.RespuestaSimple)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespuestaSimple::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mensaje_.Destroy();
}

void RespuestaSimple::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespuestaSimple::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.RespuestaSimple)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mensaje_.ClearToEmpty();
  _impl_.exito_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespuestaSimple::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool exito = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.exito_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mensaje = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mensaje();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mom.RespuestaSimple.mensaje"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespuestaSimple::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mom.RespuestaSimple)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool exito = 1;
  if (this->_internal_exito() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_exito(), target);
  }

  // string mensaje = 2;
  if (!this->_internal_mensaje().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mensaje().data(), static_cast<int>(this->_internal_mensaje().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mom.RespuestaSimple.mensaje");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mensaje(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mom.RespuestaSimple)
  return target;
}

size_t RespuestaSimple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mom.RespuestaSimple)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mensaje = 2;
  if (!this->_internal_mensaje().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mensaje());
  }

  // bool exito = 1;
  if (this->_internal_exito() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespuestaSimple::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespuestaSimple::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespuestaSimple::GetClassData() const { return &_class_data_; }


void RespuestaSimple::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespuestaSimple*>(&to_msg);
  auto& from = static_cast<const RespuestaSimple&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.RespuestaSimple)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mensaje().empty()) {
    _this->_internal_set_mensaje(from._internal_mensaje());
  }
  if (from._internal_exito() != 0) {
    _this->_internal_set_exito(from._internal_exito());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespuestaSimple::CopyFrom(const RespuestaSimple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.RespuestaSimple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespuestaSimple::IsInitialized() const {
  return true;
}

void RespuestaSimple::InternalSwap(RespuestaSimple* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mensaje_, lhs_arena,
      &other->_impl_.mensaje_, rhs_arena
  );
  swap(_impl_.exito_, other->_impl_.exito_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespuestaSimple::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mom_2eproto_getter, &descriptor_table_mom_2eproto_once,
      file_level_metadata_mom_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace mom
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mom::Credenciales*
Arena::CreateMaybeMessage< ::mom::Credenciales >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::Credenciales >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::TokenConExpiracion*
Arena::CreateMaybeMessage< ::mom::TokenConExpiracion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::TokenConExpiracion >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::Token*
Arena::CreateMaybeMessage< ::mom::Token >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::Token >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::AccionConToken*
Arena::CreateMaybeMessage< ::mom::AccionConToken >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::AccionConToken >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::MensajeConToken*
Arena::CreateMaybeMessage< ::mom::MensajeConToken >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::MensajeConToken >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::AutorizacionColaRequest*
Arena::CreateMaybeMessage< ::mom::AutorizacionColaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::AutorizacionColaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::MensajeTexto*
Arena::CreateMaybeMessage< ::mom::MensajeTexto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::MensajeTexto >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::ListaMensajes*
Arena::CreateMaybeMessage< ::mom::ListaMensajes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::ListaMensajes >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::ListaNombres*
Arena::CreateMaybeMessage< ::mom::ListaNombres >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::ListaNombres >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::EventoReplica*
Arena::CreateMaybeMessage< ::mom::EventoReplica >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::EventoReplica >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::ListaEventos*
Arena::CreateMaybeMessage< ::mom::ListaEventos >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::ListaEventos >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::EventosRequest*
Arena::CreateMaybeMessage< ::mom::EventosRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::EventosRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::PendientesRequest*
Arena::CreateMaybeMessage< ::mom::PendientesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::PendientesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mom::RespuestaSimple*
Arena::CreateMaybeMessage< ::mom::RespuestaSimple >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mom::RespuestaSimple >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
