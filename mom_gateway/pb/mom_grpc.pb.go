// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: mom.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	MomService_RegistrarUsuario_FullMethodName     = "/mom.MomService/RegistrarUsuario"
	MomService_AutenticarUsuario_FullMethodName    = "/mom.MomService/AutenticarUsuario"
	MomService_GuardarTokenReplica_FullMethodName  = "/mom.MomService/GuardarTokenReplica"
	MomService_CrearCola_FullMethodName            = "/mom.MomService/CrearCola"
	MomService_EliminarCola_FullMethodName         = "/mom.MomService/EliminarCola"
	MomService_AutorizarUsuarioCola_FullMethodName = "/mom.MomService/AutorizarUsuarioCola"
	MomService_EnviarMensajeCola_FullMethodName    = "/mom.MomService/EnviarMensajeCola"
	MomService_ConsumirMensajeCola_FullMethodName  = "/mom.MomService/ConsumirMensajeCola"
	MomService_ListarColas_FullMethodName          = "/mom.MomService/ListarColas"
	MomService_CrearTopico_FullMethodName          = "/mom.MomService/CrearTopico"
	MomService_EliminarTopico_FullMethodName       = "/mom.MomService/EliminarTopico"
	MomService_SuscribirseTopico_FullMethodName    = "/mom.MomService/SuscribirseTopico"
	MomService_PublicarEnTopico_FullMethodName     = "/mom.MomService/PublicarEnTopico"
	MomService_ConsumirDesdeTopico_FullMethodName  = "/mom.MomService/ConsumirDesdeTopico"
	MomService_ListarTopicos_FullMethodName        = "/mom.MomService/ListarTopicos"
	MomService_EnviarEventoReplica_FullMethodName  = "/mom.MomService/EnviarEventoReplica"
	MomService_SolicitarEventos_FullMethodName     = "/mom.MomService/SolicitarEventos"
	MomService_SolicitarPendientes_FullMethodName  = "/mom.MomService/SolicitarPendientes"
)

// MomServiceClient is the client API for MomService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MomServiceClient interface {
	RegistrarUsuario(ctx context.Context, in *Credenciales, opts ...grpc.CallOption) (*RespuestaSimple, error)
	AutenticarUsuario(ctx context.Context, in *Credenciales, opts ...grpc.CallOption) (*Token, error)
	GuardarTokenReplica(ctx context.Context, in *TokenConExpiracion, opts ...grpc.CallOption) (*RespuestaSimple, error)
	CrearCola(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*RespuestaSimple, error)
	EliminarCola(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*RespuestaSimple, error)
	AutorizarUsuarioCola(ctx context.Context, in *AutorizacionColaRequest, opts ...grpc.CallOption) (*RespuestaSimple, error)
	EnviarMensajeCola(ctx context.Context, in *MensajeConToken, opts ...grpc.CallOption) (*RespuestaSimple, error)
	ConsumirMensajeCola(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*MensajeTexto, error)
	ListarColas(ctx context.Context, in *Token, opts ...grpc.CallOption) (*ListaNombres, error)
	CrearTopico(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*RespuestaSimple, error)
	EliminarTopico(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*RespuestaSimple, error)
	SuscribirseTopico(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*RespuestaSimple, error)
	PublicarEnTopico(ctx context.Context, in *MensajeConToken, opts ...grpc.CallOption) (*RespuestaSimple, error)
	ConsumirDesdeTopico(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*ListaMensajes, error)
	ListarTopicos(ctx context.Context, in *Token, opts ...grpc.CallOption) (*ListaNombres, error)
	EnviarEventoReplica(ctx context.Context, in *EventoReplica, opts ...grpc.CallOption) (*RespuestaSimple, error)
	SolicitarEventos(ctx context.Context, in *EventosRequest, opts ...grpc.CallOption) (*ListaEventos, error)
	SolicitarPendientes(ctx context.Context, in *PendientesRequest, opts ...grpc.CallOption) (*ListaEventos, error)
}

type momServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMomServiceClient(cc grpc.ClientConnInterface) MomServiceClient {
	return &momServiceClient{cc}
}

func (c *momServiceClient) RegistrarUsuario(ctx context.Context, in *Credenciales, opts ...grpc.CallOption) (*RespuestaSimple, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RespuestaSimple)
	err := c.cc.Invoke(ctx, MomService_RegistrarUsuario_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) AutenticarUsuario(ctx context.Context, in *Credenciales, opts ...grpc.CallOption) (*Token, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Token)
	err := c.cc.Invoke(ctx, MomService_AutenticarUsuario_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) GuardarTokenReplica(ctx context.Context, in *TokenConExpiracion, opts ...grpc.CallOption) (*RespuestaSimple, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RespuestaSimple)
	err := c.cc.Invoke(ctx, MomService_GuardarTokenReplica_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) CrearCola(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*RespuestaSimple, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RespuestaSimple)
	err := c.cc.Invoke(ctx, MomService_CrearCola_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) EliminarCola(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*RespuestaSimple, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RespuestaSimple)
	err := c.cc.Invoke(ctx, MomService_EliminarCola_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) AutorizarUsuarioCola(ctx context.Context, in *AutorizacionColaRequest, opts ...grpc.CallOption) (*RespuestaSimple, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RespuestaSimple)
	err := c.cc.Invoke(ctx, MomService_AutorizarUsuarioCola_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) EnviarMensajeCola(ctx context.Context, in *MensajeConToken, opts ...grpc.CallOption) (*RespuestaSimple, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RespuestaSimple)
	err := c.cc.Invoke(ctx, MomService_EnviarMensajeCola_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) ConsumirMensajeCola(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*MensajeTexto, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(MensajeTexto)
	err := c.cc.Invoke(ctx, MomService_ConsumirMensajeCola_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) ListarColas(ctx context.Context, in *Token, opts ...grpc.CallOption) (*ListaNombres, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListaNombres)
	err := c.cc.Invoke(ctx, MomService_ListarColas_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) CrearTopico(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*RespuestaSimple, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RespuestaSimple)
	err := c.cc.Invoke(ctx, MomService_CrearTopico_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) EliminarTopico(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*RespuestaSimple, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RespuestaSimple)
	err := c.cc.Invoke(ctx, MomService_EliminarTopico_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) SuscribirseTopico(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*RespuestaSimple, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RespuestaSimple)
	err := c.cc.Invoke(ctx, MomService_SuscribirseTopico_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) PublicarEnTopico(ctx context.Context, in *MensajeConToken, opts ...grpc.CallOption) (*RespuestaSimple, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RespuestaSimple)
	err := c.cc.Invoke(ctx, MomService_PublicarEnTopico_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) ConsumirDesdeTopico(ctx context.Context, in *AccionConToken, opts ...grpc.CallOption) (*ListaMensajes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListaMensajes)
	err := c.cc.Invoke(ctx, MomService_ConsumirDesdeTopico_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) ListarTopicos(ctx context.Context, in *Token, opts ...grpc.CallOption) (*ListaNombres, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListaNombres)
	err := c.cc.Invoke(ctx, MomService_ListarTopicos_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) EnviarEventoReplica(ctx context.Context, in *EventoReplica, opts ...grpc.CallOption) (*RespuestaSimple, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RespuestaSimple)
	err := c.cc.Invoke(ctx, MomService_EnviarEventoReplica_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) SolicitarEventos(ctx context.Context, in *EventosRequest, opts ...grpc.CallOption) (*ListaEventos, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListaEventos)
	err := c.cc.Invoke(ctx, MomService_SolicitarEventos_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *momServiceClient) SolicitarPendientes(ctx context.Context, in *PendientesRequest, opts ...grpc.CallOption) (*ListaEventos, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListaEventos)
	err := c.cc.Invoke(ctx, MomService_SolicitarPendientes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MomServiceServer is the server API for MomService service.
// All implementations must embed UnimplementedMomServiceServer
// for forward compatibility.
type MomServiceServer interface {
	RegistrarUsuario(context.Context, *Credenciales) (*RespuestaSimple, error)
	AutenticarUsuario(context.Context, *Credenciales) (*Token, error)
	GuardarTokenReplica(context.Context, *TokenConExpiracion) (*RespuestaSimple, error)
	CrearCola(context.Context, *AccionConToken) (*RespuestaSimple, error)
	EliminarCola(context.Context, *AccionConToken) (*RespuestaSimple, error)
	AutorizarUsuarioCola(context.Context, *AutorizacionColaRequest) (*RespuestaSimple, error)
	EnviarMensajeCola(context.Context, *MensajeConToken) (*RespuestaSimple, error)
	ConsumirMensajeCola(context.Context, *AccionConToken) (*MensajeTexto, error)
	ListarColas(context.Context, *Token) (*ListaNombres, error)
	CrearTopico(context.Context, *AccionConToken) (*RespuestaSimple, error)
	EliminarTopico(context.Context, *AccionConToken) (*RespuestaSimple, error)
	SuscribirseTopico(context.Context, *AccionConToken) (*RespuestaSimple, error)
	PublicarEnTopico(context.Context, *MensajeConToken) (*RespuestaSimple, error)
	ConsumirDesdeTopico(context.Context, *AccionConToken) (*ListaMensajes, error)
	ListarTopicos(context.Context, *Token) (*ListaNombres, error)
	EnviarEventoReplica(context.Context, *EventoReplica) (*RespuestaSimple, error)
	SolicitarEventos(context.Context, *EventosRequest) (*ListaEventos, error)
	SolicitarPendientes(context.Context, *PendientesRequest) (*ListaEventos, error)
	mustEmbedUnimplementedMomServiceServer()
}

// UnimplementedMomServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedMomServiceServer struct{}

func (UnimplementedMomServiceServer) RegistrarUsuario(context.Context, *Credenciales) (*RespuestaSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegistrarUsuario not implemented")
}
func (UnimplementedMomServiceServer) AutenticarUsuario(context.Context, *Credenciales) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AutenticarUsuario not implemented")
}
func (UnimplementedMomServiceServer) GuardarTokenReplica(context.Context, *TokenConExpiracion) (*RespuestaSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuardarTokenReplica not implemented")
}
func (UnimplementedMomServiceServer) CrearCola(context.Context, *AccionConToken) (*RespuestaSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CrearCola not implemented")
}
func (UnimplementedMomServiceServer) EliminarCola(context.Context, *AccionConToken) (*RespuestaSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EliminarCola not implemented")
}
func (UnimplementedMomServiceServer) AutorizarUsuarioCola(context.Context, *AutorizacionColaRequest) (*RespuestaSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AutorizarUsuarioCola not implemented")
}
func (UnimplementedMomServiceServer) EnviarMensajeCola(context.Context, *MensajeConToken) (*RespuestaSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnviarMensajeCola not implemented")
}
func (UnimplementedMomServiceServer) ConsumirMensajeCola(context.Context, *AccionConToken) (*MensajeTexto, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConsumirMensajeCola not implemented")
}
func (UnimplementedMomServiceServer) ListarColas(context.Context, *Token) (*ListaNombres, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListarColas not implemented")
}
func (UnimplementedMomServiceServer) CrearTopico(context.Context, *AccionConToken) (*RespuestaSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CrearTopico not implemented")
}
func (UnimplementedMomServiceServer) EliminarTopico(context.Context, *AccionConToken) (*RespuestaSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EliminarTopico not implemented")
}
func (UnimplementedMomServiceServer) SuscribirseTopico(context.Context, *AccionConToken) (*RespuestaSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SuscribirseTopico not implemented")
}
func (UnimplementedMomServiceServer) PublicarEnTopico(context.Context, *MensajeConToken) (*RespuestaSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublicarEnTopico not implemented")
}
func (UnimplementedMomServiceServer) ConsumirDesdeTopico(context.Context, *AccionConToken) (*ListaMensajes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConsumirDesdeTopico not implemented")
}
func (UnimplementedMomServiceServer) ListarTopicos(context.Context, *Token) (*ListaNombres, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListarTopicos not implemented")
}
func (UnimplementedMomServiceServer) EnviarEventoReplica(context.Context, *EventoReplica) (*RespuestaSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnviarEventoReplica not implemented")
}
func (UnimplementedMomServiceServer) SolicitarEventos(context.Context, *EventosRequest) (*ListaEventos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SolicitarEventos not implemented")
}
func (UnimplementedMomServiceServer) SolicitarPendientes(context.Context, *PendientesRequest) (*ListaEventos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SolicitarPendientes not implemented")
}
func (UnimplementedMomServiceServer) mustEmbedUnimplementedMomServiceServer() {}
func (UnimplementedMomServiceServer) testEmbeddedByValue()                    {}

// UnsafeMomServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MomServiceServer will
// result in compilation errors.
type UnsafeMomServiceServer interface {
	mustEmbedUnimplementedMomServiceServer()
}

func RegisterMomServiceServer(s grpc.ServiceRegistrar, srv MomServiceServer) {
	// If the following call pancis, it indicates UnimplementedMomServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&MomService_ServiceDesc, srv)
}

func _MomService_RegistrarUsuario_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Credenciales)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).RegistrarUsuario(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_RegistrarUsuario_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).RegistrarUsuario(ctx, req.(*Credenciales))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_AutenticarUsuario_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Credenciales)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).AutenticarUsuario(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_AutenticarUsuario_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).AutenticarUsuario(ctx, req.(*Credenciales))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_GuardarTokenReplica_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenConExpiracion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).GuardarTokenReplica(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_GuardarTokenReplica_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).GuardarTokenReplica(ctx, req.(*TokenConExpiracion))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_CrearCola_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccionConToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).CrearCola(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_CrearCola_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).CrearCola(ctx, req.(*AccionConToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_EliminarCola_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccionConToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).EliminarCola(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_EliminarCola_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).EliminarCola(ctx, req.(*AccionConToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_AutorizarUsuarioCola_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AutorizacionColaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).AutorizarUsuarioCola(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_AutorizarUsuarioCola_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).AutorizarUsuarioCola(ctx, req.(*AutorizacionColaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_EnviarMensajeCola_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MensajeConToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).EnviarMensajeCola(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_EnviarMensajeCola_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).EnviarMensajeCola(ctx, req.(*MensajeConToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_ConsumirMensajeCola_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccionConToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).ConsumirMensajeCola(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_ConsumirMensajeCola_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).ConsumirMensajeCola(ctx, req.(*AccionConToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_ListarColas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).ListarColas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_ListarColas_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).ListarColas(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_CrearTopico_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccionConToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).CrearTopico(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_CrearTopico_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).CrearTopico(ctx, req.(*AccionConToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_EliminarTopico_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccionConToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).EliminarTopico(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_EliminarTopico_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).EliminarTopico(ctx, req.(*AccionConToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_SuscribirseTopico_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccionConToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).SuscribirseTopico(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_SuscribirseTopico_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).SuscribirseTopico(ctx, req.(*AccionConToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_PublicarEnTopico_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MensajeConToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).PublicarEnTopico(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_PublicarEnTopico_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).PublicarEnTopico(ctx, req.(*MensajeConToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_ConsumirDesdeTopico_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccionConToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).ConsumirDesdeTopico(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_ConsumirDesdeTopico_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).ConsumirDesdeTopico(ctx, req.(*AccionConToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_ListarTopicos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).ListarTopicos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_ListarTopicos_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).ListarTopicos(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_EnviarEventoReplica_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventoReplica)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).EnviarEventoReplica(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_EnviarEventoReplica_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).EnviarEventoReplica(ctx, req.(*EventoReplica))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_SolicitarEventos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).SolicitarEventos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_SolicitarEventos_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).SolicitarEventos(ctx, req.(*EventosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MomService_SolicitarPendientes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PendientesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MomServiceServer).SolicitarPendientes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MomService_SolicitarPendientes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MomServiceServer).SolicitarPendientes(ctx, req.(*PendientesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MomService_ServiceDesc is the grpc.ServiceDesc for MomService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MomService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "mom.MomService",
	HandlerType: (*MomServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegistrarUsuario",
			Handler:    _MomService_RegistrarUsuario_Handler,
		},
		{
			MethodName: "AutenticarUsuario",
			Handler:    _MomService_AutenticarUsuario_Handler,
		},
		{
			MethodName: "GuardarTokenReplica",
			Handler:    _MomService_GuardarTokenReplica_Handler,
		},
		{
			MethodName: "CrearCola",
			Handler:    _MomService_CrearCola_Handler,
		},
		{
			MethodName: "EliminarCola",
			Handler:    _MomService_EliminarCola_Handler,
		},
		{
			MethodName: "AutorizarUsuarioCola",
			Handler:    _MomService_AutorizarUsuarioCola_Handler,
		},
		{
			MethodName: "EnviarMensajeCola",
			Handler:    _MomService_EnviarMensajeCola_Handler,
		},
		{
			MethodName: "ConsumirMensajeCola",
			Handler:    _MomService_ConsumirMensajeCola_Handler,
		},
		{
			MethodName: "ListarColas",
			Handler:    _MomService_ListarColas_Handler,
		},
		{
			MethodName: "CrearTopico",
			Handler:    _MomService_CrearTopico_Handler,
		},
		{
			MethodName: "EliminarTopico",
			Handler:    _MomService_EliminarTopico_Handler,
		},
		{
			MethodName: "SuscribirseTopico",
			Handler:    _MomService_SuscribirseTopico_Handler,
		},
		{
			MethodName: "PublicarEnTopico",
			Handler:    _MomService_PublicarEnTopico_Handler,
		},
		{
			MethodName: "ConsumirDesdeTopico",
			Handler:    _MomService_ConsumirDesdeTopico_Handler,
		},
		{
			MethodName: "ListarTopicos",
			Handler:    _MomService_ListarTopicos_Handler,
		},
		{
			MethodName: "EnviarEventoReplica",
			Handler:    _MomService_EnviarEventoReplica_Handler,
		},
		{
			MethodName: "SolicitarEventos",
			Handler:    _MomService_SolicitarEventos_Handler,
		},
		{
			MethodName: "SolicitarPendientes",
			Handler:    _MomService_SolicitarPendientes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mom.proto",
}
